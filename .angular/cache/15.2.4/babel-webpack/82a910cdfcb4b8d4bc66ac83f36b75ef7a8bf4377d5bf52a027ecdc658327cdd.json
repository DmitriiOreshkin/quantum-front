{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class ProductService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n  getAll() {\n    return this.http.get('https://fakestoreapi.com/products', {\n      params: new HttpParams({\n        fromObject: {\n          limit: 20\n        }\n      })\n    }).pipe(catchError(this.errorHandler.bind(this)));\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAGEA,UAAU,QACL,sBAAsB;AAE7B,SAASC,UAAU,EAAqBC,UAAU,QAAQ,MAAM;;;;AAOhE,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;EAAiB;EAEnEC,YAAY,CAACC,KAAwB;IAC3C,IAAI,CAACF,YAAY,CAACG,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOR,UAAU,CAAC,MAAMM,KAAK,CAACE,OAAO,CAAC;EACxC;EAEAC,MAAM;IACJ,OAAO,IAAI,CAACN,IAAI,CACbO,GAAG,CAAa,mCAAmC,EAAE;MACpDC,MAAM,EAAE,IAAIb,UAAU,CAAC;QAAEc,UAAU,EAAE;UAAEC,KAAK,EAAE;QAAE;MAAE,CAAE;KACrD,CAAC,CACDC,IAAI,CAACf,UAAU,CAAC,IAAI,CAACM,YAAY,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EACnD;;AAdWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAe,SAAdf,cAAc;EAAAgB,YAFb;AAAM","names":["HttpParams","catchError","throwError","ProductService","constructor","http","errorService","errorHandler","error","handle","message","getAll","get","params","fromObject","limit","pipe","bind","factory","providedIn"],"sourceRoot":"","sources":["/home/dmitrii/Dev/angular/quantum-front/src/app/services/products.service.ts"],"sourcesContent":["import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpParams,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, delay, Observable, throwError } from 'rxjs';\nimport { IProduct } from '../models/products';\nimport { ErrorService } from './error.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(private http: HttpClient, private errorService: ErrorService) {}\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n\n  getAll(): Observable<IProduct[]> {\n    return this.http\n      .get<IProduct[]>('https://fakestoreapi.com/products', {\n        params: new HttpParams({ fromObject: { limit: 20 } }),\n      })\n      .pipe(catchError(this.errorHandler.bind(this)));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}